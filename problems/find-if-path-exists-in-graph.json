{"problemName":"find-if-path-exists-in-graph","language":"cpp","code":"class Solution {\npublic:\n    bool dfs(vector<vector<int>>& adj, int source, int &destination, vector<int> &vis){\n        vis[source] = 1;\n        if(source == destination) return true;\n        for(auto i : adj[source]){\n            if(vis[i]) continue;\n            if(dfs(adj, i, destination, vis)){\n                return true;\n            }\n        }\n        return false;\n    }\n    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {\n        vector<vector<int>> adj(n);\n        for(auto i : edges){\n            adj[i[0]].push_back(i[1]);\n            adj[i[1]].push_back(i[0]);\n        }\n        vector<int> vis(n + 1, 0);\n        queue<int> q;\n        q.push(source);\n        \n        while(!q.empty()){\n            int front = q.front();\n            q.pop();\n            if(front == destination){\n                return true;\n            }\n            vis[front] = 1;\n            for(auto i : adj[front]){\n                if(vis[i]) continue;\n                q.push(i);\n            }\n        }\n        return false;\n    }\n};"}